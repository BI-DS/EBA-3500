# Lecture 2: Exploratory data analysis

## Curriculum

ISPL, Chapter 2.
Lecture notes.

### Statistical learning
1. The *target* variable $y$ is a function of the *feature* variables $x$ plus an error term $\epsilon$, $y=f(x)+\epsilon$.
2. We estimate $f$ using $\hat{f}$ either for prediction or inference.
3. The population mean square error equals $E[(\hat{Y} - Y)^2]=E[(f(X)-\hat{f}(X))^2]+\text{Var}{(\epsilon)}$, where the first term is the bias and the second the variance.
4. $f$ can be estimated using parametric or non-parametric methods. Linear regression is the most famous parametric method, k-nearest neighbors a famous non-parametric method.
5. Some methods are flexible but not easy to interpret, such as deep learning and boosting, others are inflexible but easier to interpret, such as linear regression.
6. "There is no free lunch in statistics: no one method dominates all others over all possible data sets."
6. Accuracy of regression models is usually measured using the mean squared error, $\text{MSE}=\frac{1}{n}\sum_{1}^{n}(y_i-\hat{f}(x_i))^2$.
7. Bias-variance trade-off.
8. Accuracy of classification models is often measured using the 
9. Bayes classifier.
10. K-Nearest neighbors.

### Data loading and exploration

1. `frame.info()` displays fundamental information about a frame. `float64` are decimals, `int64` are integers, `object` are usually strings. Importantly, they are not treated as numbers. 
2. `frame.describe()` displays descriptive information such as quantiles, mean, min, max and standard deviation. `frame.boxplot()` displays most of the information in a more readable way.
3. `pd.read_csv("path_to_file")` reads `.csv` files. Filter out bad values with `na_values` and change index column with `index_col`.
6. Always read the documentation for the data set, even if you aren't asked.
7. Find the correlation matrix with `frame.corr()`. Access one column using the `frame.corr()["column"]` syntax. Rule of thumb: Correlations with absolute value between $0$ and $.1$ are small, $0.1$ and $0.3$ are medium, and the rest are big.
9. The function `sns.pairplot()` from `seaborn` creates scatter plots of all variables in a dataset; the arguments `x_vars` and `y_vars` lets you restrict the plotting variables. Make a single scatter plot using `boston.plot.scatter("column1", "column2")`

5. Calculate minima using `frame.min()`, maxima using `frame.max()`. Find the index of the minimizer (maximizer) using `frame.argmin()` / `frame.argmax()`.
6. Transpose index and columns using `transpose`.