---
title: "Solution to exercise 3.1"
author: Jonas Moss
date: last-modified
execute:
  echo: true
jupyter: python3
reference-location: margin
citation-location: margin
---

### Problems
I don't want to spend too much time on this stuff.

1. Non-linearity of the response-predictor relationships
  * Residual plots.
3. Non-constant variance of error terms
  * Residual plots
6. Collinearity
  * Plot and correlation matrix.
  * Computational results.
4. Outliers
  * Mention, but don't discuss the plots.
2. Correlation of error terms
  * Do not talk about.
5. High-leverage points
  * Do not talk about.

## On the $F$-test
1. 


### Solution

> We use the `auto` data in this exercise. Provided the data is in the data folder, we obtain.

```{python}
#| echo: False
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.formula.api as smf
import statsmodels.graphics as gfx
```

```{python}
#| echo: False
auto = pd.read_csv("data/Auto.csv", na_values="?", index_col="name").dropna()
auto.replace({"origin": {1: "American", 2: "European", 3: "Japanese"}}, inplace = True)
auto.head()
```


## (a) 
> Use the `smf.ols()` function to perform a simple linear regression
with mpg as the response and horsepower as the predictor.

```{python}
#| echo: False
fit=smf.ols("mpg~horsepower", data=auto).fit()
fit.rsquared   # Prediction strength.
fit.params     # Parameters
fit.pvalues    # p-values
fit.conf_int() # Confidence interval.
fit.predict({"horsepower": 98}) 
```

## (b)
> Produce a scatterplot of feature and target with the fitted regression line on top.

```{python}
sns.lmplot(auto, x="horsepower", y="mpg")
```



## (c)
> Produce some of diagnostic plots of the least squares regression fit as described in the lab. Comment on any problems you see with the fit.

```{python}
plt.plot(fit.predict(), auto["mpg"], "rx")
```
